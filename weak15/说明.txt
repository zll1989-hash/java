
链路监控和日志中心各项目组目前注册中心不统一，造成很多其他的问题，因此计划注册中心全部使用nacos，
基于这个前提，灰度才好做。同时灰度有依赖于链路监控。   开源的实现，比如skywalking，zipkin等，
有以下缺点：没有实现开发自己新开线程池的情况，这个场景下，链路监控断了，灰度信息也就不连续了。
基于开源增加功能也非常麻烦，比如开源的之后链路信息，没有链路相关日志开源实现的链路日志，缺少错误日志信息，
往往找不到线上问题的原因因此，
自主研发了链路监控，并且整合了日志中心，
提供通过链路id查找这个链路日志的工程，方便线上问题查找。


对比了：框架的链路追踪  和  自主研发的链路日志追踪  （如里面截图）

异步链路接入方案
利用javaagent， 增加启动参数
-javaagent:/Users/dengxiaolin/.m2/repository/cn/egenie/architect/trace/trace-agent/1.0.0-SNAPSHOT/trace-agent-1.0.0-SNAPSHOT.jar

日志接入方案
所有工程统一使用logback，已经增加dubbo-bom，web-bom各业务项目参考demo使用
<appender name="ScribeAppender" class="cn.egenie.architect.trace.log.scribe.logback.ScribeAppender"/>
同时增加命令行参数：
-Dlog.collect.url=http://101.37.149.97:80/log-uat  -Dspring.profiles.active=uat

删除Config
删除AppConfig中的DruidConfig，DubboConfig
删除ShrioConfig


对于商品不用seata方案，使用如下：

商品库存解锁记录场景
  1、超时未支付，比如30分钟则订单失效关闭
  2、下单成功，创建订单业务失败，订单回滚
  

研究了第三方支付平台：
蚂蚁金服开放平台

地址：https://openhome.alipay.com/docCenter/docCenter.htm
介绍：https://opendocs.alipay.com/open/200/105304
支付宝扫码登录即可
网页移动应用开发指南

地址：https://opendocs.alipay.com/open/200
申请应用：https://openhome.alipay.com/platform/developerIndex.htm
核心是获取APPID


  
 
库存解锁防止继续支付：
1、30分支付超时则无法支付订单
2、订单31分延迟消息(比订单超时大几分钟)
            ->查询订单状态-向第三方支付查询订单状态，只有未支付状态，且本地订单状态是NEW，才修改本地订单状态为取消CANCEL，其他业务才可以解锁对应的库存库存
3、商品、优惠券库存32分延迟消息(比订单超时大几分钟)
  ->查询订单状态-订单不存在，解锁库存
  ->查询订单状态
    1)订单状态为取消CANCEL的情况，才可以解锁库存，确认消息接收；
    2)订单状态为未支付NEW的情况，则不解锁库存，不修改订单状态，重新投递消息或者拒收；
      （避免网络延迟到 导致订单关单消息，比库存解锁还慢,没更新订单状态）
    3)如果是订单已经支付则修改库存task工作单状态，确认消息接收；
注意：延迟队列一定要开启手动的ack机制，防止解锁失败，消息丢失，也要防止多次解锁
    解锁库存的时候：修改状态和修改对应库存task工作单状态应该是同个事务，防止其中一个失败